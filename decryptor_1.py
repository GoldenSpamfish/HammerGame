p1="""1.100111100011011101111001101110010111111101001010011111000001010111110011100111001100000001100000010111001110110111001000001101000001
000010000010001001110110101111110011101000100111001001010001111110000110110001101010000100011101000011000001100011101001010100100111011001
11111100001011000101010011110100100111101101111111000000110100011100000100010110110101101111110001100000100111111100000001100010000110111
10000100100101000010000000011000000000010110000011101011001001011101001000000111100110011010111100011011011110000011010101101011110101110
10010111000101111000011101111110100001011000001110011101011011101111111110111101011111011100011001100100110100110010010111010001110001010
01101110001011010000010110010101101110100001100110011001111110111111111101110111110000101100010011011100011001110111000110100000100101101
00001100110001101110111111011100111100011110010000110110010100111101111001110101000111000111000100101010110011111011010011110110000010101
00101111111101100010100000111011100000101011001001011111001101100010111100111101110101001101110010001011100111010101001001101101100101010
01111010111000000100111100110010001011101001001000111000011100111111101110010011011001001000111001000010100011101001010101011011001101111
00000001110101100000001111101001001110110000110011101001111101000010100000010000100000110011111110011101010101001000000001110001011001101
01001011011001101110101101001100000000000001001000010110110111111110101000111000000110010001000101001010100000110111010100000011011000100
01100101110111111100110100010000101001100010100011100111100011011001000001001110111001010101000100010011010101100001001101000111000010110
01100110111001001010111101100110011100001001000101000101111111011111010110001000000010101001110100001010110011010011101110011110100011000
11010000010111101001111100000010000001100100000101010111110101110010100000000110100111001110000111100000001011000001000110000000110000110
10101100011100000111001010111011110001111010111101110011101111101111000111001000010011"""

p2="""00000000101001001100000100100000000101111100000010000000010101001000100000000100000000101111100000110000000100101000001100111000000000
001100000000001010000001110000001000100101010000000011101010100001010000000010000001000010000000000000000000000000001010000000000000000001
100111110000000000100010000001100000001010000000101100100010000000001100000000000000000001110000000000110101010000000001001010100000000000
000010000000000010100000000000001000101100000000000000100000000000100000100000000011100000100000000000000000000000001010000000000000001000
000000000000000000000000000001110000000000000001000000000000000000000000000000001100000000000000000100000000000000000000000000000001100000
000000000001100000000000000000000000000000001010000000000000001000000000000000000000000000000000110000000000000000100000000000000000000000
0000000011000000000000000011"""

pi="11.0010010000111111011"

num1="110100100" #420

def decrypt(initPrint,binaryString, spacing, addspace,binaryBase=2):
    print(initPrint+":")
    input=binaryString.replace('\r', '').replace('\n', '').replace(" ","").strip()
    #for integers
    try:
        (int(input))
    #for decimals
    except:
        #converts decimal to binary with sum of non zero terms method
        
        #makes a list of pairs and finds the .
        terms=[]
        decPlace=0
        for i in range(len(input)-1):
            if (input[i]!='.'):
                terms.append([input[i],0])
            else:
                decPlace=i-1

        for i in range(len(terms)-1):
            terms[i][1]=2**(-i+decPlace)

        # adds nonzero terms
        sum=0
        for n in terms:
            if n[0]=='1':
                sum+=n[1]
        print (sum)
        
        
    else:
        output=""
        for i in range(0,len(input)):
            output+=input[i]
            if (i+1)%spacing==0:
                output+=" "
        print(output)

        nums=output.split(" ")
        nums.pop()
        hex=[]
        for n in nums:
            hex.append(int(n,binaryBase))
        
        spaced=""
        if not(addspace):
            for i in hex:
                spaced+=str(i)+""
            print(spaced)
        else:
            print(hex)

        textOut=""
        for i in hex:
            textOut+=chr(i)
        print(textOut)

        print("full conversion base 2: "+ str(int(input,2)))
    
    print('----------------')

def findfactors(num):
    factors=[]
    for i in range(1,num+1):
        if num%i==0:
            factors.append(i)
    print (factors)
    return factors

#findfactors(len(p1))

decrypt("page 1",p1,5,False,2)

decrypt("page 2",p2,6,True,2)

decrypt("pi",pi,6,False,2)

decrypt("420",num1,2,False,2)

print(findfactors(len(p2)))